
"use strict"

var path = require('path');

module.exports = function(PATH_REPLACEMENT) {
  return {
    "rxjs/AsyncSubject": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/AsyncSubject.js"),
    "rxjs/BehaviorSubject": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/BehaviorSubject.js"),
    "rxjs/InnerSubscriber": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/InnerSubscriber.js"),
    "rxjs/Notification": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/Notification.js"),
    "rxjs/Observable": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/Observable.js"),
    "rxjs/Observer": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/Observer.js"),
    "rxjs/Operator": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/Operator.js"),
    "rxjs/OuterSubscriber": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/OuterSubscriber.js"),
    "rxjs/ReplaySubject": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/ReplaySubject.js"),
    "rxjs/Rx": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/Rx.js"),
    "rxjs/Scheduler": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/Scheduler.js"),
    "rxjs/Subject": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/Subject.js"),
    "rxjs/SubjectSubscription": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/SubjectSubscription.js"),
    "rxjs/Subscriber": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/Subscriber.js"),
    "rxjs/Subscription": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/Subscription.js"),
    "rxjs/add/observable/bindCallback": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/observable/bindCallback.js"),
    "rxjs/add/observable/bindNodeCallback": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/observable/bindNodeCallback.js"),
    "rxjs/add/observable/combineLatest": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/observable/combineLatest.js"),
    "rxjs/add/observable/concat": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/observable/concat.js"),
    "rxjs/add/observable/defer": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/observable/defer.js"),
    "rxjs/add/observable/dom/ajax": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/observable/dom/ajax.js"),
    "rxjs/add/observable/dom/webSocket": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/observable/dom/webSocket.js"),
    "rxjs/add/observable/empty": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/observable/empty.js"),
    "rxjs/add/observable/forkJoin": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/observable/forkJoin.js"),
    "rxjs/add/observable/from": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/observable/from.js"),
    "rxjs/add/observable/fromEvent": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/observable/fromEvent.js"),
    "rxjs/add/observable/fromEventPattern": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/observable/fromEventPattern.js"),
    "rxjs/add/observable/fromPromise": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/observable/fromPromise.js"),
    "rxjs/add/observable/generate": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/observable/generate.js"),
    "rxjs/add/observable/if": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/observable/if.js"),
    "rxjs/add/observable/interval": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/observable/interval.js"),
    "rxjs/add/observable/merge": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/observable/merge.js"),
    "rxjs/add/observable/never": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/observable/never.js"),
    "rxjs/add/observable/of": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/observable/of.js"),
    "rxjs/add/observable/onErrorResumeNext": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/observable/onErrorResumeNext.js"),
    "rxjs/add/observable/pairs": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/observable/pairs.js"),
    "rxjs/add/observable/race": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/observable/race.js"),
    "rxjs/add/observable/range": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/observable/range.js"),
    "rxjs/add/observable/throw": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/observable/throw.js"),
    "rxjs/add/observable/timer": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/observable/timer.js"),
    "rxjs/add/observable/using": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/observable/using.js"),
    "rxjs/add/observable/zip": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/observable/zip.js"),
    "rxjs/add/operator/audit": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/audit.js"),
    "rxjs/add/operator/auditTime": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/auditTime.js"),
    "rxjs/add/operator/buffer": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/buffer.js"),
    "rxjs/add/operator/bufferCount": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/bufferCount.js"),
    "rxjs/add/operator/bufferTime": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/bufferTime.js"),
    "rxjs/add/operator/bufferToggle": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/bufferToggle.js"),
    "rxjs/add/operator/bufferWhen": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/bufferWhen.js"),
    "rxjs/add/operator/catch": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/catch.js"),
    "rxjs/add/operator/combineAll": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/combineAll.js"),
    "rxjs/add/operator/combineLatest": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/combineLatest.js"),
    "rxjs/add/operator/concat": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/concat.js"),
    "rxjs/add/operator/concatAll": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/concatAll.js"),
    "rxjs/add/operator/concatMap": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/concatMap.js"),
    "rxjs/add/operator/concatMapTo": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/concatMapTo.js"),
    "rxjs/add/operator/count": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/count.js"),
    "rxjs/add/operator/debounce": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/debounce.js"),
    "rxjs/add/operator/debounceTime": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/debounceTime.js"),
    "rxjs/add/operator/defaultIfEmpty": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/defaultIfEmpty.js"),
    "rxjs/add/operator/delay": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/delay.js"),
    "rxjs/add/operator/delayWhen": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/delayWhen.js"),
    "rxjs/add/operator/dematerialize": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/dematerialize.js"),
    "rxjs/add/operator/distinct": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/distinct.js"),
    "rxjs/add/operator/distinctUntilChanged": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/distinctUntilChanged.js"),
    "rxjs/add/operator/distinctUntilKeyChanged": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/distinctUntilKeyChanged.js"),
    "rxjs/add/operator/do": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/do.js"),
    "rxjs/add/operator/elementAt": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/elementAt.js"),
    "rxjs/add/operator/every": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/every.js"),
    "rxjs/add/operator/exhaust": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/exhaust.js"),
    "rxjs/add/operator/exhaustMap": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/exhaustMap.js"),
    "rxjs/add/operator/expand": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/expand.js"),
    "rxjs/add/operator/filter": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/filter.js"),
    "rxjs/add/operator/finally": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/finally.js"),
    "rxjs/add/operator/find": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/find.js"),
    "rxjs/add/operator/findIndex": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/findIndex.js"),
    "rxjs/add/operator/first": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/first.js"),
    "rxjs/add/operator/groupBy": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/groupBy.js"),
    "rxjs/add/operator/ignoreElements": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/ignoreElements.js"),
    "rxjs/add/operator/isEmpty": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/isEmpty.js"),
    "rxjs/add/operator/last": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/last.js"),
    "rxjs/add/operator/let": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/let.js"),
    "rxjs/add/operator/map": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/map.js"),
    "rxjs/add/operator/mapTo": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/mapTo.js"),
    "rxjs/add/operator/materialize": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/materialize.js"),
    "rxjs/add/operator/max": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/max.js"),
    "rxjs/add/operator/merge": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/merge.js"),
    "rxjs/add/operator/mergeAll": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/mergeAll.js"),
    "rxjs/add/operator/mergeMap": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/mergeMap.js"),
    "rxjs/add/operator/mergeMapTo": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/mergeMapTo.js"),
    "rxjs/add/operator/mergeScan": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/mergeScan.js"),
    "rxjs/add/operator/min": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/min.js"),
    "rxjs/add/operator/multicast": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/multicast.js"),
    "rxjs/add/operator/observeOn": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/observeOn.js"),
    "rxjs/add/operator/onErrorResumeNext": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/onErrorResumeNext.js"),
    "rxjs/add/operator/pairwise": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/pairwise.js"),
    "rxjs/add/operator/partition": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/partition.js"),
    "rxjs/add/operator/pluck": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/pluck.js"),
    "rxjs/add/operator/publish": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/publish.js"),
    "rxjs/add/operator/publishBehavior": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/publishBehavior.js"),
    "rxjs/add/operator/publishLast": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/publishLast.js"),
    "rxjs/add/operator/publishReplay": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/publishReplay.js"),
    "rxjs/add/operator/race": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/race.js"),
    "rxjs/add/operator/reduce": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/reduce.js"),
    "rxjs/add/operator/repeat": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/repeat.js"),
    "rxjs/add/operator/repeatWhen": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/repeatWhen.js"),
    "rxjs/add/operator/retry": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/retry.js"),
    "rxjs/add/operator/retryWhen": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/retryWhen.js"),
    "rxjs/add/operator/sample": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/sample.js"),
    "rxjs/add/operator/sampleTime": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/sampleTime.js"),
    "rxjs/add/operator/scan": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/scan.js"),
    "rxjs/add/operator/sequenceEqual": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/sequenceEqual.js"),
    "rxjs/add/operator/share": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/share.js"),
    "rxjs/add/operator/shareReplay": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/shareReplay.js"),
    "rxjs/add/operator/single": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/single.js"),
    "rxjs/add/operator/skip": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/skip.js"),
    "rxjs/add/operator/skipLast": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/skipLast.js"),
    "rxjs/add/operator/skipUntil": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/skipUntil.js"),
    "rxjs/add/operator/skipWhile": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/skipWhile.js"),
    "rxjs/add/operator/startWith": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/startWith.js"),
    "rxjs/add/operator/subscribeOn": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/subscribeOn.js"),
    "rxjs/add/operator/switch": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/switch.js"),
    "rxjs/add/operator/switchMap": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/switchMap.js"),
    "rxjs/add/operator/switchMapTo": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/switchMapTo.js"),
    "rxjs/add/operator/take": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/take.js"),
    "rxjs/add/operator/takeLast": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/takeLast.js"),
    "rxjs/add/operator/takeUntil": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/takeUntil.js"),
    "rxjs/add/operator/takeWhile": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/takeWhile.js"),
    "rxjs/add/operator/throttle": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/throttle.js"),
    "rxjs/add/operator/throttleTime": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/throttleTime.js"),
    "rxjs/add/operator/timeInterval": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/timeInterval.js"),
    "rxjs/add/operator/timeout": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/timeout.js"),
    "rxjs/add/operator/timeoutWith": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/timeoutWith.js"),
    "rxjs/add/operator/timestamp": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/timestamp.js"),
    "rxjs/add/operator/toArray": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/toArray.js"),
    "rxjs/add/operator/toPromise": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/toPromise.js"),
    "rxjs/add/operator/window": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/window.js"),
    "rxjs/add/operator/windowCount": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/windowCount.js"),
    "rxjs/add/operator/windowTime": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/windowTime.js"),
    "rxjs/add/operator/windowToggle": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/windowToggle.js"),
    "rxjs/add/operator/windowWhen": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/windowWhen.js"),
    "rxjs/add/operator/withLatestFrom": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/withLatestFrom.js"),
    "rxjs/add/operator/zip": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/zip.js"),
    "rxjs/add/operator/zipAll": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/add/operator/zipAll.js"),
    "rxjs/interfaces": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/interfaces.js"),
    "rxjs/observable/ArrayLikeObservable": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/ArrayLikeObservable.js"),
    "rxjs/observable/ArrayObservable": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/ArrayObservable.js"),
    "rxjs/observable/BoundCallbackObservable": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/BoundCallbackObservable.js"),
    "rxjs/observable/BoundNodeCallbackObservable": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/BoundNodeCallbackObservable.js"),
    "rxjs/observable/ConnectableObservable": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/ConnectableObservable.js"),
    "rxjs/observable/DeferObservable": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/DeferObservable.js"),
    "rxjs/observable/EmptyObservable": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/EmptyObservable.js"),
    "rxjs/observable/ErrorObservable": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/ErrorObservable.js"),
    "rxjs/observable/ForkJoinObservable": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/ForkJoinObservable.js"),
    "rxjs/observable/FromEventObservable": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/FromEventObservable.js"),
    "rxjs/observable/FromEventPatternObservable": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/FromEventPatternObservable.js"),
    "rxjs/observable/FromObservable": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/FromObservable.js"),
    "rxjs/observable/GenerateObservable": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/GenerateObservable.js"),
    "rxjs/observable/IfObservable": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/IfObservable.js"),
    "rxjs/observable/IntervalObservable": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/IntervalObservable.js"),
    "rxjs/observable/IteratorObservable": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/IteratorObservable.js"),
    "rxjs/observable/NeverObservable": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/NeverObservable.js"),
    "rxjs/observable/PairsObservable": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/PairsObservable.js"),
    "rxjs/observable/PromiseObservable": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/PromiseObservable.js"),
    "rxjs/observable/RangeObservable": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/RangeObservable.js"),
    "rxjs/observable/ScalarObservable": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/ScalarObservable.js"),
    "rxjs/observable/SubscribeOnObservable": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/SubscribeOnObservable.js"),
    "rxjs/observable/TimerObservable": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/TimerObservable.js"),
    "rxjs/observable/UsingObservable": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/UsingObservable.js"),
    "rxjs/observable/bindCallback": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/bindCallback.js"),
    "rxjs/observable/bindNodeCallback": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/bindNodeCallback.js"),
    "rxjs/observable/combineLatest": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/combineLatest.js"),
    "rxjs/observable/concat": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/concat.js"),
    "rxjs/observable/defer": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/defer.js"),
    "rxjs/observable/dom/AjaxObservable": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/dom/AjaxObservable.js"),
    "rxjs/observable/dom/WebSocketSubject": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/dom/WebSocketSubject.js"),
    "rxjs/observable/dom/ajax": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/dom/ajax.js"),
    "rxjs/observable/dom/webSocket": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/dom/webSocket.js"),
    "rxjs/observable/empty": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/empty.js"),
    "rxjs/observable/forkJoin": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/forkJoin.js"),
    "rxjs/observable/from": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/from.js"),
    "rxjs/observable/fromEvent": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/fromEvent.js"),
    "rxjs/observable/fromEventPattern": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/fromEventPattern.js"),
    "rxjs/observable/fromPromise": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/fromPromise.js"),
    "rxjs/observable/generate": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/generate.js"),
    "rxjs/observable/if": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/if.js"),
    "rxjs/observable/interval": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/interval.js"),
    "rxjs/observable/merge": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/merge.js"),
    "rxjs/observable/never": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/never.js"),
    "rxjs/observable/of": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/of.js"),
    "rxjs/observable/onErrorResumeNext": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/onErrorResumeNext.js"),
    "rxjs/observable/pairs": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/pairs.js"),
    "rxjs/observable/race": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/race.js"),
    "rxjs/observable/range": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/range.js"),
    "rxjs/observable/throw": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/throw.js"),
    "rxjs/observable/timer": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/timer.js"),
    "rxjs/observable/using": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/using.js"),
    "rxjs/observable/zip": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/observable/zip.js"),
    "rxjs/operator/audit": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/audit.js"),
    "rxjs/operator/auditTime": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/auditTime.js"),
    "rxjs/operator/buffer": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/buffer.js"),
    "rxjs/operator/bufferCount": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/bufferCount.js"),
    "rxjs/operator/bufferTime": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/bufferTime.js"),
    "rxjs/operator/bufferToggle": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/bufferToggle.js"),
    "rxjs/operator/bufferWhen": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/bufferWhen.js"),
    "rxjs/operator/catch": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/catch.js"),
    "rxjs/operator/combineAll": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/combineAll.js"),
    "rxjs/operator/combineLatest": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/combineLatest.js"),
    "rxjs/operator/concat": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/concat.js"),
    "rxjs/operator/concatAll": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/concatAll.js"),
    "rxjs/operator/concatMap": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/concatMap.js"),
    "rxjs/operator/concatMapTo": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/concatMapTo.js"),
    "rxjs/operator/count": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/count.js"),
    "rxjs/operator/debounce": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/debounce.js"),
    "rxjs/operator/debounceTime": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/debounceTime.js"),
    "rxjs/operator/defaultIfEmpty": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/defaultIfEmpty.js"),
    "rxjs/operator/delay": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/delay.js"),
    "rxjs/operator/delayWhen": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/delayWhen.js"),
    "rxjs/operator/dematerialize": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/dematerialize.js"),
    "rxjs/operator/distinct": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/distinct.js"),
    "rxjs/operator/distinctUntilChanged": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/distinctUntilChanged.js"),
    "rxjs/operator/distinctUntilKeyChanged": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/distinctUntilKeyChanged.js"),
    "rxjs/operator/do": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/do.js"),
    "rxjs/operator/elementAt": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/elementAt.js"),
    "rxjs/operator/every": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/every.js"),
    "rxjs/operator/exhaust": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/exhaust.js"),
    "rxjs/operator/exhaustMap": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/exhaustMap.js"),
    "rxjs/operator/expand": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/expand.js"),
    "rxjs/operator/filter": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/filter.js"),
    "rxjs/operator/finally": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/finally.js"),
    "rxjs/operator/find": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/find.js"),
    "rxjs/operator/findIndex": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/findIndex.js"),
    "rxjs/operator/first": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/first.js"),
    "rxjs/operator/groupBy": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/groupBy.js"),
    "rxjs/operator/ignoreElements": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/ignoreElements.js"),
    "rxjs/operator/isEmpty": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/isEmpty.js"),
    "rxjs/operator/last": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/last.js"),
    "rxjs/operator/let": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/let.js"),
    "rxjs/operator/map": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/map.js"),
    "rxjs/operator/mapTo": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/mapTo.js"),
    "rxjs/operator/materialize": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/materialize.js"),
    "rxjs/operator/max": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/max.js"),
    "rxjs/operator/merge": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/merge.js"),
    "rxjs/operator/mergeAll": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/mergeAll.js"),
    "rxjs/operator/mergeMap": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/mergeMap.js"),
    "rxjs/operator/mergeMapTo": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/mergeMapTo.js"),
    "rxjs/operator/mergeScan": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/mergeScan.js"),
    "rxjs/operator/min": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/min.js"),
    "rxjs/operator/multicast": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/multicast.js"),
    "rxjs/operator/observeOn": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/observeOn.js"),
    "rxjs/operator/onErrorResumeNext": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/onErrorResumeNext.js"),
    "rxjs/operator/pairwise": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/pairwise.js"),
    "rxjs/operator/partition": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/partition.js"),
    "rxjs/operator/pluck": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/pluck.js"),
    "rxjs/operator/publish": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/publish.js"),
    "rxjs/operator/publishBehavior": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/publishBehavior.js"),
    "rxjs/operator/publishLast": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/publishLast.js"),
    "rxjs/operator/publishReplay": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/publishReplay.js"),
    "rxjs/operator/race": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/race.js"),
    "rxjs/operator/reduce": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/reduce.js"),
    "rxjs/operator/repeat": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/repeat.js"),
    "rxjs/operator/repeatWhen": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/repeatWhen.js"),
    "rxjs/operator/retry": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/retry.js"),
    "rxjs/operator/retryWhen": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/retryWhen.js"),
    "rxjs/operator/sample": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/sample.js"),
    "rxjs/operator/sampleTime": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/sampleTime.js"),
    "rxjs/operator/scan": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/scan.js"),
    "rxjs/operator/sequenceEqual": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/sequenceEqual.js"),
    "rxjs/operator/share": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/share.js"),
    "rxjs/operator/shareReplay": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/shareReplay.js"),
    "rxjs/operator/single": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/single.js"),
    "rxjs/operator/skip": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/skip.js"),
    "rxjs/operator/skipLast": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/skipLast.js"),
    "rxjs/operator/skipUntil": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/skipUntil.js"),
    "rxjs/operator/skipWhile": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/skipWhile.js"),
    "rxjs/operator/startWith": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/startWith.js"),
    "rxjs/operator/subscribeOn": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/subscribeOn.js"),
    "rxjs/operator/switch": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/switch.js"),
    "rxjs/operator/switchMap": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/switchMap.js"),
    "rxjs/operator/switchMapTo": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/switchMapTo.js"),
    "rxjs/operator/take": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/take.js"),
    "rxjs/operator/takeLast": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/takeLast.js"),
    "rxjs/operator/takeUntil": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/takeUntil.js"),
    "rxjs/operator/takeWhile": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/takeWhile.js"),
    "rxjs/operator/throttle": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/throttle.js"),
    "rxjs/operator/throttleTime": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/throttleTime.js"),
    "rxjs/operator/timeInterval": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/timeInterval.js"),
    "rxjs/operator/timeout": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/timeout.js"),
    "rxjs/operator/timeoutWith": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/timeoutWith.js"),
    "rxjs/operator/timestamp": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/timestamp.js"),
    "rxjs/operator/toArray": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/toArray.js"),
    "rxjs/operator/toPromise": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/toPromise.js"),
    "rxjs/operator/window": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/window.js"),
    "rxjs/operator/windowCount": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/windowCount.js"),
    "rxjs/operator/windowTime": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/windowTime.js"),
    "rxjs/operator/windowToggle": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/windowToggle.js"),
    "rxjs/operator/windowWhen": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/windowWhen.js"),
    "rxjs/operator/withLatestFrom": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/withLatestFrom.js"),
    "rxjs/operator/zip": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/zip.js"),
    "rxjs/operator/zipAll": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operator/zipAll.js"),
    "rxjs/operators/audit": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/audit.js"),
    "rxjs/operators/auditTime": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/auditTime.js"),
    "rxjs/operators/buffer": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/buffer.js"),
    "rxjs/operators/bufferCount": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/bufferCount.js"),
    "rxjs/operators/bufferTime": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/bufferTime.js"),
    "rxjs/operators/bufferToggle": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/bufferToggle.js"),
    "rxjs/operators/bufferWhen": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/bufferWhen.js"),
    "rxjs/operators/catchError": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/catchError.js"),
    "rxjs/operators/combineAll": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/combineAll.js"),
    "rxjs/operators/combineLatest": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/combineLatest.js"),
    "rxjs/operators/concat": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/concat.js"),
    "rxjs/operators/concatAll": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/concatAll.js"),
    "rxjs/operators/concatMap": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/concatMap.js"),
    "rxjs/operators/concatMapTo": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/concatMapTo.js"),
    "rxjs/operators/count": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/count.js"),
    "rxjs/operators/debounce": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/debounce.js"),
    "rxjs/operators/debounceTime": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/debounceTime.js"),
    "rxjs/operators/defaultIfEmpty": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/defaultIfEmpty.js"),
    "rxjs/operators/delay": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/delay.js"),
    "rxjs/operators/delayWhen": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/delayWhen.js"),
    "rxjs/operators/dematerialize": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/dematerialize.js"),
    "rxjs/operators/distinct": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/distinct.js"),
    "rxjs/operators/distinctUntilChanged": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/distinctUntilChanged.js"),
    "rxjs/operators/distinctUntilKeyChanged": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/distinctUntilKeyChanged.js"),
    "rxjs/operators/elementAt": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/elementAt.js"),
    "rxjs/operators/every": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/every.js"),
    "rxjs/operators/exhaust": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/exhaust.js"),
    "rxjs/operators/exhaustMap": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/exhaustMap.js"),
    "rxjs/operators/expand": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/expand.js"),
    "rxjs/operators/filter": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/filter.js"),
    "rxjs/operators/finalize": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/finalize.js"),
    "rxjs/operators/find": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/find.js"),
    "rxjs/operators/findIndex": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/findIndex.js"),
    "rxjs/operators/first": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/first.js"),
    "rxjs/operators/groupBy": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/groupBy.js"),
    "rxjs/operators/ignoreElements": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/ignoreElements.js"),
    "rxjs/operators/index": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/index.js"),
    "rxjs/operators": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/index.js"),
    "rxjs/operators/isEmpty": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/isEmpty.js"),
    "rxjs/operators/last": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/last.js"),
    "rxjs/operators/map": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/map.js"),
    "rxjs/operators/mapTo": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/mapTo.js"),
    "rxjs/operators/materialize": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/materialize.js"),
    "rxjs/operators/max": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/max.js"),
    "rxjs/operators/merge": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/merge.js"),
    "rxjs/operators/mergeAll": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/mergeAll.js"),
    "rxjs/operators/mergeMap": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/mergeMap.js"),
    "rxjs/operators/mergeMapTo": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/mergeMapTo.js"),
    "rxjs/operators/mergeScan": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/mergeScan.js"),
    "rxjs/operators/min": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/min.js"),
    "rxjs/operators/multicast": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/multicast.js"),
    "rxjs/operators/observeOn": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/observeOn.js"),
    "rxjs/operators/onErrorResumeNext": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/onErrorResumeNext.js"),
    "rxjs/operators/pairwise": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/pairwise.js"),
    "rxjs/operators/partition": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/partition.js"),
    "rxjs/operators/pluck": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/pluck.js"),
    "rxjs/operators/publish": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/publish.js"),
    "rxjs/operators/publishBehavior": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/publishBehavior.js"),
    "rxjs/operators/publishLast": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/publishLast.js"),
    "rxjs/operators/publishReplay": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/publishReplay.js"),
    "rxjs/operators/race": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/race.js"),
    "rxjs/operators/reduce": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/reduce.js"),
    "rxjs/operators/refCount": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/refCount.js"),
    "rxjs/operators/repeat": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/repeat.js"),
    "rxjs/operators/repeatWhen": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/repeatWhen.js"),
    "rxjs/operators/retry": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/retry.js"),
    "rxjs/operators/retryWhen": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/retryWhen.js"),
    "rxjs/operators/sample": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/sample.js"),
    "rxjs/operators/sampleTime": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/sampleTime.js"),
    "rxjs/operators/scan": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/scan.js"),
    "rxjs/operators/sequenceEqual": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/sequenceEqual.js"),
    "rxjs/operators/share": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/share.js"),
    "rxjs/operators/shareReplay": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/shareReplay.js"),
    "rxjs/operators/single": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/single.js"),
    "rxjs/operators/skip": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/skip.js"),
    "rxjs/operators/skipLast": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/skipLast.js"),
    "rxjs/operators/skipUntil": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/skipUntil.js"),
    "rxjs/operators/skipWhile": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/skipWhile.js"),
    "rxjs/operators/startWith": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/startWith.js"),
    "rxjs/operators/subscribeOn": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/subscribeOn.js"),
    "rxjs/operators/switchAll": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/switchAll.js"),
    "rxjs/operators/switchMap": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/switchMap.js"),
    "rxjs/operators/switchMapTo": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/switchMapTo.js"),
    "rxjs/operators/take": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/take.js"),
    "rxjs/operators/takeLast": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/takeLast.js"),
    "rxjs/operators/takeUntil": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/takeUntil.js"),
    "rxjs/operators/takeWhile": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/takeWhile.js"),
    "rxjs/operators/tap": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/tap.js"),
    "rxjs/operators/throttle": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/throttle.js"),
    "rxjs/operators/throttleTime": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/throttleTime.js"),
    "rxjs/operators/timeInterval": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/timeInterval.js"),
    "rxjs/operators/timeout": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/timeout.js"),
    "rxjs/operators/timeoutWith": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/timeoutWith.js"),
    "rxjs/operators/timestamp": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/timestamp.js"),
    "rxjs/operators/toArray": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/toArray.js"),
    "rxjs/operators/window": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/window.js"),
    "rxjs/operators/windowCount": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/windowCount.js"),
    "rxjs/operators/windowTime": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/windowTime.js"),
    "rxjs/operators/windowToggle": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/windowToggle.js"),
    "rxjs/operators/windowWhen": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/windowWhen.js"),
    "rxjs/operators/withLatestFrom": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/withLatestFrom.js"),
    "rxjs/operators/zip": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/zip.js"),
    "rxjs/operators/zipAll": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/operators/zipAll.js"),
    "rxjs/scheduler/Action": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/scheduler/Action.js"),
    "rxjs/scheduler/AnimationFrameAction": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/scheduler/AnimationFrameAction.js"),
    "rxjs/scheduler/AnimationFrameScheduler": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/scheduler/AnimationFrameScheduler.js"),
    "rxjs/scheduler/AsapAction": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/scheduler/AsapAction.js"),
    "rxjs/scheduler/AsapScheduler": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/scheduler/AsapScheduler.js"),
    "rxjs/scheduler/AsyncAction": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/scheduler/AsyncAction.js"),
    "rxjs/scheduler/AsyncScheduler": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/scheduler/AsyncScheduler.js"),
    "rxjs/scheduler/QueueAction": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/scheduler/QueueAction.js"),
    "rxjs/scheduler/QueueScheduler": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/scheduler/QueueScheduler.js"),
    "rxjs/scheduler/VirtualTimeScheduler": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/scheduler/VirtualTimeScheduler.js"),
    "rxjs/scheduler/animationFrame": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/scheduler/animationFrame.js"),
    "rxjs/scheduler/asap": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/scheduler/asap.js"),
    "rxjs/scheduler/async": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/scheduler/async.js"),
    "rxjs/scheduler/queue": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/scheduler/queue.js"),
    "rxjs/symbol/iterator": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/symbol/iterator.js"),
    "rxjs/symbol/observable": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/symbol/observable.js"),
    "rxjs/symbol/rxSubscriber": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/symbol/rxSubscriber.js"),
    "rxjs/testing/ColdObservable": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/testing/ColdObservable.js"),
    "rxjs/testing/HotObservable": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/testing/HotObservable.js"),
    "rxjs/testing/SubscriptionLog": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/testing/SubscriptionLog.js"),
    "rxjs/testing/SubscriptionLoggable": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/testing/SubscriptionLoggable.js"),
    "rxjs/testing/TestMessage": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/testing/TestMessage.js"),
    "rxjs/testing/TestScheduler": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/testing/TestScheduler.js"),
    "rxjs/util/AnimationFrame": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/util/AnimationFrame.js"),
    "rxjs/util/ArgumentOutOfRangeError": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/util/ArgumentOutOfRangeError.js"),
    "rxjs/util/EmptyError": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/util/EmptyError.js"),
    "rxjs/util/FastMap": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/util/FastMap.js"),
    "rxjs/util/Immediate": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/util/Immediate.js"),
    "rxjs/util/Map": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/util/Map.js"),
    "rxjs/util/MapPolyfill": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/util/MapPolyfill.js"),
    "rxjs/util/ObjectUnsubscribedError": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/util/ObjectUnsubscribedError.js"),
    "rxjs/util/Set": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/util/Set.js"),
    "rxjs/util/TimeoutError": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/util/TimeoutError.js"),
    "rxjs/util/UnsubscriptionError": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/util/UnsubscriptionError.js"),
    "rxjs/util/applyMixins": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/util/applyMixins.js"),
    "rxjs/util/assign": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/util/assign.js"),
    "rxjs/util/errorObject": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/util/errorObject.js"),
    "rxjs/util/identity": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/util/identity.js"),
    "rxjs/util/isArray": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/util/isArray.js"),
    "rxjs/util/isArrayLike": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/util/isArrayLike.js"),
    "rxjs/util/isDate": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/util/isDate.js"),
    "rxjs/util/isFunction": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/util/isFunction.js"),
    "rxjs/util/isNumeric": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/util/isNumeric.js"),
    "rxjs/util/isObject": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/util/isObject.js"),
    "rxjs/util/isPromise": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/util/isPromise.js"),
    "rxjs/util/isScheduler": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/util/isScheduler.js"),
    "rxjs/util/noop": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/util/noop.js"),
    "rxjs/util/not": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/util/not.js"),
    "rxjs/util/pipe": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/util/pipe.js"),
    "rxjs/util/root": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/util/root.js"),
    "rxjs/util/subscribeToResult": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/util/subscribeToResult.js"),
    "rxjs/util/toSubscriber": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/util/toSubscriber.js"),
    "rxjs/util/tryCatch": path.resolve(PATH_REPLACEMENT, "rxjs/_esm2015/util/tryCatch.js")
};
}
